#!/bin/bash

EOS_SCRIPTS_DIR=/usr/share/endeavouros/scripts
EOS_LIVEUSER=liveuser

INSTALL_LOG_FILE=/home/$EOS_LIVEUSER/endeavour-install.log

source $EOS_SCRIPTS_DIR/eos-script-lib-yad || exit 1
source $EOS_SCRIPTS_DIR/translations.bash || exit 1


Welog() {
    [ -d /home/$EOS_LIVEUSER ] && echo "$progname: " "$@" >> $INSTALL_LOG_FILE
}

AfterTranslations() {
    # Here we have definitions that require special treatment because of
    # yad running in other processes...

    export WH_BUTT_TITLE="$(ltr help_butt_title)"
    export WH_BUTT_TEXT="$(ltr help_butt_text)"

    export CAL_NOAVAIL="$(ltr cal_noavail)"
    export CAL_WARN="$(ltr cal_warn)"
    export CAL_INFO1="$(ltr cal_info1)"
    export CAL_INFO2="$(ltr cal_info2)"
    export CAL_INFO3="$(ltr cal_info3)"
    export CAL_INFO4="$(ltr cal_info4)"
    export CAL_CHOOSE="$(ltr cal_choose)"
    export CAL_METHOD="$(ltr cal_method)"
    export CAL_NOSUPPORT="$(ltr cal_nosupport)"
    export CAL_NOFILE="$(ltr cal_nofile)"
    export CAL_ISTARTED="$(ltr cal_istarted)"
    export CAL_ISTOPPED="$(ltr cal_istopped)"
    export ISSUES_TITLE="$(ltr issues_title)"
    export ISSUES_FRUB="$(ltr issues_grub)"
    export ISSUES_RUN="$(ltr issues_run)"
    export ISSUES_NO="$(ltr issues_no)"
    export SYSUP_NO="$(ltr sysup_no)"
    export SYSUP_CHECK="$(ltr sysup_check)"
    export INSTALL_INSTALLER="$(ltr install_installer)"
    export INSTALL_ALREADY="$(ltr install_already)"
    export INSTALL_ING="$(ltr install_ing)"
    export INSTALL_DONE="$(ltr install_done)"
    export DM_TITLE="$(ltr dm_title)"
    export DM_COL_NAME1="$(ltr dm_col_name1)"
    export DM_COL_NAME2="$(ltr dm_col_name2)"
    export DM_REBOOT_REQUIRED="$(ltr dm_reboot_required)"
    export DM_CHANGED="$(ltr dm_changed)"
    export DM_FAILED="$(ltr dm_failed)"
    export DM_WARNING_TITLE="$(ltr dm_warning_title)"
    export AFTER_INSTALL_US="$(ltr after_install_us)"
    export AFTER_INSTALL_US_FROM="$(ltr after_install_us_from)"
    export AFTER_INSTALL_US_EL="$(ltr after_install_us_el)"
    export AFTER_INSTALL_US_DONE="$(ltr after_install_us_done)"
    export AFTER_INSTALL_US_FAIL="$(ltr after_install_us_fail)"
}

calamares_preparations()
{
    local lang="$1"                    # one of: en fi de ...
    local mode="$2"                    # one of: offline online sway bspwm
    local realmode="$mode"             # remembers sway and bspwm
    local progname=Welcome

    _init_translations --tr-prefer="manual" "$lang" || { echo "language fail" >&2 ; exit 1 ; }
    AfterTranslations

    local urlfolder=/home/$EOS_LIVEUSER/community_editions
    local urlfile
    local file

    echo "$mode" > /tmp/install_mode.txt

    ####################### Check $mode and connection

    case "$mode" in
        sway | bspwm) mode=online ;;    # Nearly everything after this is normal online install!
        offline | online)  ;;
        *)  eos_yad_WARN "$CAL_NOSUPPORT '$mode'" ; return 1 ;;
    esac

    ## Now $mode is either 'online' or 'offline'.
    ## $realmode may be $mode, 'sway' or 'bspwm'.

    ####################### Check connection for online mode

    case "$mode" in
        online) eos_yad_check_internet_connection verbose || return 1 ;;
    esac

    ####################### Checks for various files

    case "$realmode" in
        bspwm | sway)
            for urlfile in $urlfolder/${realmode}_setup.url $urlfolder/${realmode}_netinstall-yaml.url ; do
                if [ ! -r $urlfile ] ; then
                    eos_yad_WARN "community edition file $urlfile not found on the ISO!"
                    return 1
                fi
            done
            ;;
    esac

    file=/usr/share/calamares/settings.conf_$mode
    if [ ! -r $file ] ; then
        eos_yad_WARN "$CAL_NOFILE '$file'"
        return 1
    fi

    ###################### Tests for the environment

    if [ 0 -eq 1 ] ; then
        if [ "$debugging" = "yes" ] ; then
            # Stop here if only debugging.
            eos_yad_WARN_debug "Stopping $FUNCNAME (4)."
            return 1
        fi
        if [ "$show_installer" != "no" ] ; then
            # this 'if' could be removed
            eos_yad_WARN_debug "Stopping $FUNCNAME (5)."
            return 1
        fi

        if [ 0 -eq 1 ] ; then
            ########################## TESTING ONLY !!!
            echo "mode=$mode, realmode=$realmode" > /tmp/install_mode_foobar.txt
            return 1
        fi
    fi

    ####################### Fetch and adjust some files for calamares (online mode)

    case "$mode" in
        online)
            #### Fetching: netinstall.yaml, chrooted_cleaner_script.sh, update-mirrorlist. May be useful for older ISOs.
            
            local fetchurl=https://raw.githubusercontent.com/endeavouros-team/install-scripts/master
            local fetched

            fetched=netinstall.yaml
            Welog "fetching $fetched."
            if (wget -q $fetchurl/$fetched) ; then
                sudo bash -c "cp -f $fetched /usr/share/calamares/ ; chown root:root /usr/share/calamares/$fetched ; chmod 0644 /usr/share/calamares/$fetched"
                rm -f $fetched
            else
                Welog "==> Warning: fetching $fetched failed."
            fi
            for fetched in chrooted_cleaner_script.sh update-mirrorlist ; do
                Welog "fetching $fetched."
                if (wget -q $fetchurl/$fetched) ; then
                    sudo bash -c "cp -f $fetched /usr/bin/ ; chown root:root /usr/bin/$fetched ; chmod 0755 /usr/bin/$fetched"
                    rm -f $fetched
                else
                    Welog "==> Warning: fetching $fetched failed."
                fi
            done

            # For older ISOs, update mirrorlist
            if [ -z "$(/usr/bin/grep "^update-mirrorlist$" /usr/bin/pacstrap_calamares)" ] ; then
                Welog "updating mirrorlist, please wait ..."
                /usr/bin/update-mirrorlist
            fi

            #### In sway and bspwm, prepare setup.sh and netinstall.yaml

            case "$realmode" in
                sway | bspwm)
                    cp $urlfolder/${realmode}_setup.url           /home/$EOS_LIVEUSER/setup.url           || return 1
                    cp $urlfolder/${realmode}_netinstall-yaml.url /home/$EOS_LIVEUSER/netinstall-yaml.url || return 1
                    sudo sed -i /usr/bin/chrooted_cleaner_script.sh \
                         -e 's|^#_setup_personal$|_setup_personal|' \
                         -e 's|^_de_wm_config$|#_de_wm_config|'
                    ;;
            esac

            #### Support for Welcome option --pkglist

            if [ -n "$user_pkglist_url" ] ; then
                Welog "fetching $user_pkglist_url."
                if [ -d /home/$EOS_LIVEUSER ] ; then
                    wget -q --timeout=10 -O "/home/$EOS_LIVEUSER/user_pkglist.txt" "$user_pkglist_url"
                else
                    wget -q --timeout=10 -O "$HOME/user_pkglist.txt" "$user_pkglist_url"
                fi
            fi

            #### Support for giving netinstall.yaml via /home/liveuser/netinstall-yaml.url (mainly sway and bspwm).
            #### Could also be used by any online install.

            file=/usr/share/calamares/modules/netinstall.conf
            if [ ! -r $file ] ; then
                Welog "warning: $file not found!"
                return 1
            fi
            if [ -r "/home/$EOS_LIVEUSER/netinstall-yaml.url" ] ; then
                # allow an own netinstall.yaml from a URL config file!
                local netinstall_url=$(cat "/home/$EOS_LIVEUSER/netinstall-yaml.url")
                if [ -z "$netinstall_url" ] ; then
                    Welog "warning: /home/$EOS_LIVEUSER/netinstall-yaml.url is empty."
                    return 1
                fi
                Welog "using $netinstall_url to be used as netinstall.yaml"
                if [ -r $file ] ; then
                    sudo sed \
                         -i $file \
                         -e "s|^\([ ]*groupsUrl:\).*/endeavouros-team/.*/netinstall\.yaml$|\1 $netinstall_url|"
                fi
            fi
            ;;
    esac

    Welog "copying settings.conf files."
    sudo cp -praf /usr/share/calamares/settings.conf_$mode         /usr/share/calamares/settings.conf
    sudo cp -praf /usr/share/calamares/modules/packages.conf_$mode /usr/share/calamares/modules/packages.conf
    sudo cp -praf /usr/share/calamares/modules/welcome.conf_$mode  /usr/share/calamares/modules/welcome.conf
}

calamares_preparations "$@"
