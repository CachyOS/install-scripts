#! /bin/bash

BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BWhite='\033[1;37m'       # White

_check_internet_connection(){
    ping -c 1 8.8.8.8 >& /dev/null   # ping Google's address
}

_update_scripts(){

    local URL="https://raw.githubusercontent.com/endeavouros-team/install-scripts/master"

    local scripts_array=(
    cleaner_script.sh chrooted_cleaner_script.sh update-mirrorlist calamares_switcher pacstrap_calamares
)

    local download
    for scripts in "${scripts_array[@]}"; do
        wget $URL/$scripts
        chmod +x $scripts
        sudo mv $scripts /usr/bin
    done

}

_cal_version(){

rm -rf cal_github_version.txt cal_installed_version.txt

local URL_TAG="https://github.com/endeavouros-team/mirrors/releases/tag/endeavouros_calamares"
local PKG_NAME="calamares_current"

# ? and double quotes to escape "$" variable using sed

curl $URL_TAG |grep "$PKG_NAME" |sed s"?^.*$PKG_NAME?$PKG_NAME?"g | sed s'/pkg.tar.zst.*/pkg.tar.zst/'g |tail -1 >cal_github_version.txt

pacman -Q |grep "$PKG_NAME" |sed s'/ /-/' |sed s'/$/-any.pkg.tar.zst/' >cal_installed_version.txt

local URL_DOWNLOAD="https://github.com/endeavouros-team/mirrors/releases/download/endeavouros_calamares"

diff cal_github_version.txt cal_installed_version.txt

if [ $? != 0 ]
    then
        wget $URL_DOWNLOAD/$(cat cal_github_version.txt)
        sudo pacman -U $(cat cal_github_version.txt) --noconfirm

fi

}

_cal_testing_version(){

local URL_TAG="https://github.com/endeavouros-team/mirrors/releases/tag/endeavouros_calamares"
local PKG_NAME="calamares_test"

# ? and double quotes to escape "$" variable using sed
curl $URL_TAG |grep "$PKG_NAME" >/dev/null
if [[ $? == 0 ]]
    then
        curl $URL_TAG |grep "$PKG_NAME" |sed s"?^.*$PKG_NAME?$PKG_NAME?"g | sed s'/pkg.tar.zst.*/pkg.tar.zst/'g |tail -1 >cal_github_version.txt
        local URL_DOWNLOAD="https://github.com/endeavouros-team/mirrors/releases/download/endeavouros_calamares"
        wget $URL_DOWNLOAD/$(cat cal_github_version.txt)
        sudo pacman -Rns calamares_current --noconfirm
        sudo pacman -U $(cat cal_github_version.txt) --noconfirm
    else
        echo "There are no testing versions available"
        exit
fi

}

_welcome_screen(){

local msg1="Do you want to check for TESTING calamares version? ( (1=no, 2=yes / Default 1)"
printf "$BGreen \n $msg1"

read answer 

if [ "$answer" != "2" ]; then answer="1"; fi

case $answer in

    1)  
    clear
    _update_scripts
    _cal_version
    ;;

    2)
    clear
    _update_scripts
    _cal_testing_version
    ;;

    * )
    ;;

esac

}

_check_testing_calamares(){

local msg1="Do you want to update calamares or install a testing version? (1=update, 2=testing / Default 1)"
printf "$BGreen \n $msg1"

read answer 

if [ "$answer" != "2" ]; then answer="1"; fi

case $answer in

    1)  
    clear
    _update_scripts
    clear
    _cal_version
    ;;

    2)
    clear
    _update_scripts
    clear
    _cal_testing_version
    ;;

    * )
    ;;

esac

}

_run_calamares(){

local msg2="Do you want to run calamares? (1=yes, 2=no / Default 1)"

printf "$BYellow \n $msg2"

read run_me 

if [ "$run_me" != "2" ]; then run_me="1"; fi

case $run_me in

    1)
    /usr/bin/calamares_switcher
    ;;

    2)
    exit
    ;;

    * )
    ;;

esac

}

# STARTS HERE
_check_internet_connection && {
    clear
    _welcome_screen
    #_cal_testing_version
}
clear
#_run_calamares
/usr/bin/calamares_switcher
