#!/bin/bash

CodeToCountry() {  # convert country code to country name
    echo "$REFLECTOR_COUNTRIES" | grep -w "$1" | sed 's|^\(.*[a-z]\)[ ]*[A-Z][A-Z].*$|\1|'
}
CountryToCode() {  # convert name to code; used for checking
    echo "$REFLECTOR_COUNTRIES" | grep -w "$1" | awk '{print $(NF-1)}'
}

CCCheck() {   # check validity of country code
    case "$1" in
        [A-Z][A-Z]) test -n "$(CodeToCountry "$1")" && return 0 ;;
    esac
    return 1  # fail
}
GetYourCountryCode() {
    local IP code

    IP="$(dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d '"')"  # ipv4 address
    code="$(geoiplookup "$IP" | sed 's|^.*: \([A-Z][A-Z]\),.*$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }
    code="$(whois "$IP" | grep ^country: | awk '{print $NF}')"
    CCCheck "$code" && {
        echo "$code" ; return
    }

    IP="$(dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d '"')"  # ipv6 address
    code="$(geoiplookup6 "$IP" | sed 's|^.*: \([A-Z][A-Z]\),.*$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }
    code="$(whois "$IP" | grep ^country: | awk '{print $NF}')"
    CCCheck "$code" && {
        echo "$code" ; return
    }

    code="$(curl ipinfo.io 2>/dev/null | grep '"country":' | sed 's|^.*: "\([A-Z][A-Z]\)",$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }

    # net services failed, use local variables, but may be wrong
    code="$(locale | grep ^LC_TIME | cut -d '"' -f 2 | sed 's|^.*_\([A-Z][A-Z]\)\..*$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }
}
GetYourCountry() {
    local code="$(GetYourCountryCode)"
    local country="$(test -n "$code" && CodeToCountry "$code")"
    echo "$country"
}
CWantsHttp() {
    case "$1" in
        Finland) echo no ;;
        *)       echo yes ;;
    esac
}
Main() {
    REFLECTOR_COUNTRIES="$(reflector --list-countries)"
    local this_country="$(GetYourCountry)"
    local tf=$(mktemp)
    local mf=/etc/pacman.d/mirrorlist

    local refopts="-phttps -f10 -l20 --sort age --save $tf"  # common reflector options

    test -n "$this_country" && {
        echo "Detected country: '$this_country'" >&2
        # testing time option -P: do not add http with this country
        if [ "$1" = "-P" ] || [ "$(CWantsHttp "$this_country")" = "no" ] ; then
            reflector $refopts -a2 -c "$this_country"
        else
            reflector $refopts -a2 -phttp -c "$this_country"   # a country may lack https mirrors
        fi
    } || {
        reflector $refopts -a1
    }
    sudo bash -c "cp $tf $mf && chmod 0644 $mf"
    rm -f $tf
}

Main "$@"
