#!/bin/bash

CodeToCountry() {  # convert country code to country name
    echo "$REFLECTOR_COUNTRIES" | grep -w "$1" | sed 's|^\(.*[a-z]\)[ ]*[A-Z][A-Z].*$|\1|'
}
CountryToCode() {  # convert name to code; used for checking
    echo "$REFLECTOR_COUNTRIES" | grep -w "$1" | awk '{print $(NF-1)}'
}

CCCheck() {   # check validity of country code
    case "$1" in
        [A-Z][A-Z]) test -n "$(CodeToCountry "$1")" && return 0 ;;
    esac
    return 1  # fail
}
GetYourCountryCode() {
    local IP code

    IP="$(dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d '"')"  # ipv4 address
    code="$(geoiplookup "$IP" | sed 's|^.*: \([A-Z][A-Z]\),.*$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }
    code="$(whois "$IP" | grep ^country: | awk '{print $NF}')"
    CCCheck "$code" && {
        echo "$code" ; return
    }

    IP="$(dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com | tr -d '"')"  # ipv6 address
    code="$(geoiplookup6 "$IP" | sed 's|^.*: \([A-Z][A-Z]\),.*$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }
    code="$(whois "$IP" | grep ^country: | awk '{print $NF}')"
    CCCheck "$code" && {
        echo "$code" ; return
    }

    code="$(curl ipinfo.io 2>/dev/null | grep '"country":' | sed 's|^.*: "\([A-Z][A-Z]\)",$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }

    # net services failed, use local variables, but may be wrong
    code="$(locale | grep ^LC_TIME | cut -d '"' -f 2 | sed 's|^.*_\([A-Z][A-Z]\)\..*$|\1|')"
    CCCheck "$code" && {
        echo "$code" ; return
    }
}
GetYourCountry() {
    local code="$(GetYourCountryCode)"
    local country="$(test -n "$code" && CodeToCountry "$code")"
    echo "$country"
}

echo2() { echo "$@" >&2 ; }

Main() {
    REFLECTOR_COUNTRIES="$(reflector --list-countries)"
    local this_country="$(GetYourCountryCode)"
    local retval
    local tf=$(mktemp)
    local mf=/etc/pacman.d/mirrorlist
    local cmd="reflector -phttps -f10 -l20 --sort rate "  # reflector and common options
    local dryrun=no

    case "$1" in
        -n | --dryrun) dryrun=yes ;;    # don't save mirrorlist to /etc/pacman.d
    esac

    test -n "$this_country" && echo2 "Detected country: $(CodeToCountry $this_country)"

    case "$this_country" in
        "") cmd+="-a1"                           # no mirrors here, search https mirrors globally
            ;;
        FI) cmd+="-a2 -cFI -cSE"                 # search https mirrors in FI and SE
            ;;
        CH|DE|DK|FR|HK|IE|IS|NL|NZ|SE|SG|UK|US)
            cmd+="-a2 -c $this_country"          # search https mirrors only in this country
            ;;
        *)
            cmd+="-a8 -phttp -c $this_country"   # this country may lack https mirrors
            ;;
    esac

    $cmd > $tf
    retval=$?

    if [ $retval -eq 0 ] ; then
        echo2 "Arch mirrorlist by reflector:"
        cat $tf >&2
        if [ "$dryrun" = "no" ] ; then
            sudo bash -c "cp $tf $mf && chmod 0644 $mf"
        fi
    else
        echo2 "reflector returned error code $retval, mirrorlist not updated."
    fi

    rm -f $tf
    return $retval   # 0=OK, other is FAIL
}

Main "$@"
